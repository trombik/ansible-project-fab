---
project_db_host: 127.0.0.1
project_db_name: fab
project_redis_host: 127.0.0.1
project_es_host: 127.0.0.1  # XXX unused
project_rails_env: production
project_dump_dir: "{{ fab_manager_home }}/backup"
project_maintenance_site_dir: "{{ fab_manager_home }}/sorry"

fab_manager_groups:
  - ansible
fab_manager_redis_host: "{{ project_redis_host }}"
fab_manager_db_host: "{{ project_db_host }}"
fab_manager_db_name: "{{ project_db_name }}"
fab_manager_db_user: "{{ project_db_user }}"
fab_manager_db_password: "{{ project_db_password }}"
fab_manager_db_admin_user: "{{ project_db_admin_user }}"
fab_manager_db_admin_password: "{{ project_db_admin_password }}"

fab_manager_config: ""
fab_manager_config_database:
  development:
    adapter: postgresql
    host: "{{ fab_manager_db_host }}"
    encoding: unicode
    database: "{{ fab_manager_db_name }}"
    pool: 25
    username: "{{ fab_manager_db_user }}"
    password: "{{ fab_manager_db_password }}"
  production:
    adapter: postgresql
    host: "{{ fab_manager_db_host }}"
    encoding: unicode
    database: "{{ fab_manager_db_name }}"
    pool: 25
    username: "{{ fab_manager_db_user }}"
    password: "{{ fab_manager_db_password }}"

fab_manager_env:
  # XXX webpack needs a lot of memory
  NODE_OPTIONS: "--max-old-space-size=2048"
  # XXX disable color in active record
  NO_COLOR: "yes"
  RAILS_ENV: "{{ project_rails_env }}"
  # see:
  # https://github.com/sleede/fab-manager/blob/master/doc/environment.md
  POSTGRES_HOST: "{{ fab_manager_db_host }}"
  POSTGRES_USERNAME: "{{ fab_manager_db_user }}"
  POSTGRES_PASSWORD: "{{ fab_manager_db_password }}"
  REDIS_HOST: "{{ fab_manager_redis_host }}"
  ELASTICSEARCH_HOST: "{{ fab_manager_es_host }}"

  SECRET_KEY_BASE: 83daf5e7b80d990f037407bab78dff9904aaf3c195a50f84fa8695a22287e707dfbd9524b403b1dcf116ae1d8c06844c3d7ed942564e5b46be6ae3ead93a9d30

  STRIPE_API_KEY: ""
  STRIPE_PUBLISHABLE_KEY: ""

  OAUTH_CLIENT_ID: github-oauth-app-id
  OAUTH_CLIENT_SECRET: github-oauth-app-secret

  DEFAULT_HOST: "{{ project_fab_manager_default_host }}"
  DEFAULT_PROTOCOL: "{{ fab_manager_http_schema }}"

  DELIVERY_METHOD: smtp
  SMTP_ADDRESS: "{{ project_smtp_address }}"
  SMTP_PORT: "{{ project_smtp_port }}"
  SMTP_USER_NAME: "{{ project_smtp_user_name }}"
  SMTP_PASSWORD: "{{ project_smtp_password }}"
  SMTP_AUTHENTICATION: "{{ project_smtp_authentication }}"
  SMTP_ENABLE_STARTTLS_AUTO: "false"
  SMTP_OPENSSL_VERIFY_MODE: "peer"
  SMTP_CA_FILE: /usr/local/etc/ssl/cert.pem
  SMTP_TLS: "{{ project_smtp_tls }}"

  RAILS_LOCALE: en
  APP_LOCALE: en
  MOMENT_LOCALE: en
  SUMMERNOTE_LOCALE: en-US
  ANGULAR_LOCALE: en
  FULLCALENDAR_LOCALE: en
  INTL_LOCALE: en-US
  INTL_CURRENCY: USD
  FORCE_VERSION_CHECK: "false"
  ALLOW_INSECURE_HTTP: "{{ project_allow_insecure_http }}"

  POSTGRESQL_LANGUAGE_ANALYZER: english

  TIME_ZONE: Asia/Bangkok
  WEEK_STARTING_DAY: monday
  D3_DATE_FORMAT: "%Y/%m/%d"
  UIB_DATE_FORMAT: "yyyy/MM/dd"
  EXCEL_DATE_FORMAT: "dd/mm/yyyy"

  OPENLAB_BASE_URI: "https://openprojects.fab-manager.com"
  OPENLAB_SSL_VERIFY: "true"

  ADMINSYS_EMAIL: "{{ project_fab_manager_admin_user }}"
  ADMIN_EMAIL: "{{ project_fab_manager_admin_user }}"
  ADMIN_PASSWORD: "{{ project_fab_manager_admin_password }}"
  LOG_LEVEL: debug
  DISK_SPACE_MB_ALERT: 100
  # 5242880 = 5 megabytes
  MAX_IMPORT_SIZE: 5242880
  # 10485760 = 10 megabytes
  MAX_IMAGE_SIZE: 10485760
  # 20971520 = 20 megabytes
  MAX_CAO_SIZE: 20971520

# ___________________________________postgresql
postgresql_debug: yes

# XXX use 13 for trusted extensions
os_postgresql_major_version:
  Devuan: "{% if ansible_distribution_version | int >= 4 %}13{% else %}11{% endif %}"
  Ubuntu: 12
postgresql_major_version: "{{ os_postgresql_major_version[ansible_distribution] | default(13) }}"
os_sysctl:
  FreeBSD: {}
  OpenBSD:
    kern.seminfo.semmni: 60
    kern.seminfo.semmns: 1024
  Debian: {}
  RedHat: {}
sysctl: "{{ os_sysctl[ansible_os_family] }}"

os_postgresql_extra_packages:
  FreeBSD:
    - "databases/postgresql{{ postgresql_major_version }}-contrib"
  OpenBSD:
    - postgresql-contrib
  Debian:
    - postgresql-contrib
  RedHat:
    - postgresql-contrib

postgresql_extra_packages: "{{ os_postgresql_extra_packages[ansible_os_family] }}"
postgresql_pg_hba_config: |
  host    all             all             127.0.0.1/32            {{ postgresql_default_auth_method }}
  host    all             all             ::1/128                 {{ postgresql_default_auth_method }}
  local   replication     all                                     trust
  host    replication     all             127.0.0.1/32            trust
  host    replication     all             ::1/128                 trust
postgresql_config: |
  {% if ansible_os_family == 'Debian' %}
  data_directory = '{{ postgresql_db_dir }}'
  hba_file = '{{ postgresql_conf_dir }}/pg_hba.conf'
  ident_file = '{{ postgresql_conf_dir }}/pg_ident.conf'
  external_pid_file = '/var/run/postgresql/{{ postgresql_major_version }}-main.pid'
  port = 5432
  max_connections = 100
  unix_socket_directories = '/var/run/postgresql'
  ssl = on
  ssl_cert_file = '/etc/ssl/certs/ssl-cert-snakeoil.pem'
  ssl_key_file = '/etc/ssl/private/ssl-cert-snakeoil.key'
  shared_buffers = 128MB
  dynamic_shared_memory_type = posix
  log_line_prefix = '%m [%p] %q%u@%d '
  log_timezone = 'UTC'
  cluster_name = '{{ postgresql_major_version }}/main'
  stats_temp_directory = '/var/run/postgresql/{{ postgresql_major_version }}-main.pg_stat_tmp'
  datestyle = 'iso, mdy'
  timezone = 'UTC'
  lc_messages = 'C'
  lc_monetary = 'C'
  lc_numeric = 'C'
  lc_time = 'C'
  default_text_search_config = 'pg_catalog.english'
  include_dir = 'conf.d'
  password_encryption = {{ postgresql_default_auth_method }}
  {% else %}
  max_connections = 100
  shared_buffers = 128MB
  dynamic_shared_memory_type = posix
  max_wal_size = 1GB
  min_wal_size = 80MB
  log_destination = 'syslog'
  log_timezone = 'UTC'
  update_process_title = off
  datestyle = 'iso, mdy'
  timezone = 'UTC'
  lc_messages = 'C'
  lc_monetary = 'C'
  lc_numeric = 'C'
  lc_time = 'C'
  default_text_search_config = 'pg_catalog.english'
  password_encryption = {{ postgresql_default_auth_method }}
  {% endif %}
postgresql_users:
  - name: "{{ project_db_user }}"
    password: "{{ project_db_password }}"
    role_attr_flags: CREATEDB
  - name: "{{ project_db_admin_user }}"
    password: "{{ project_db_admin_password }}"
    role_attr_flags: SUPERUSER

postgresql_databases:
  - name: "{{ project_db_name }}"
    owner: "{{ project_db_user }}"
    state: present

project_postgresql_initdb_flags: --encoding=utf-8 --lc-collate=C --locale=en_US.UTF-8
project_postgresql_initdb_flags_pwfile: "--pwfile={{ postgresql_initial_password_file }}"
project_postgresql_initdb_flags_auth: "--auth-host={{ postgresql_default_auth_method }} --auth-local={{ postgresql_default_auth_method }}"
os_postgresql_initdb_flags:
  FreeBSD: "{{ project_postgresql_initdb_flags }} {{ project_postgresql_initdb_flags_pwfile }} {{ project_postgresql_initdb_flags_auth }}"
  OpenBSD: "{{ project_postgresql_initdb_flags }} {{ project_postgresql_initdb_flags_pwfile }} {{ project_postgresql_initdb_flags_auth }}"
  RedHat: "{{ project_postgresql_initdb_flags }} {{ project_postgresql_initdb_flags_pwfile }} {{ project_postgresql_initdb_flags_auth }}"
  # XXX you cannot use --auth-host or --auth-local here because
  # pg_createcluster, which is executed during the installation, overrides
  # them, forcing md5
  Debian: "{{ project_postgresql_initdb_flags }} {{ project_postgresql_initdb_flags_pwfile }}"

postgresql_initdb_flags: "{{ os_postgresql_initdb_flags[ansible_os_family] }}"
os_postgresql_flags:
  FreeBSD: |
    postgresql_flags="-w -s -m fast"
  OpenBSD: ""
  Debian: ""
  RedHat: ""
postgresql_flags: "{{ os_postgresql_flags[ansible_os_family] }}"

# ___________________________________redis
redis_config: |
  databases 17
  save 900 1
  bind {{ project_redis_host }}
  protected-mode no
  port {{ redis_port }}
  timeout 0
  tcp-keepalive 300
  daemonize yes
  pidfile /var/run/redis/{{ redis_service }}.pid
  loglevel notice
  logfile {{ redis_log_file }}
  always-show-logo no
  dbfilename dump.rdb
  dir {{ redis_db_dir }}/

# ___________________________________supervisor
os_supervisor_flags:
  OpenBSD: "-c {{ supervisor_conf_file }}"
  FreeBSD: |
    supervisord_config="{{ supervisor_conf_file }}"
    supervisord_user="{{ supervisor_user }}"
# "
supervisor_flags: "{{ os_supervisor_flags[ansible_os_family] | default('') }}"

# see https://github.com/sleede/fab-manager/blob/master/docker/supervisor.conf
supervisor_config: |
  [unix_http_server]
  file={{ supervisor_unix_socket_file }}

  [supervisord]
  logfile={{ supervisor_log_file }}
  logfile_maxbytes=50MB
  logfile_backups=10
  loglevel=info
  pidfile={{ supervisor_pid_file }}
  nodaemon=false
  minfds=1024
  minprocs=200

  [rpcinterface:supervisor]
  supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

  [supervisorctl]
  serverurl=unix://{{ supervisor_unix_socket_file }}

  [include]
  files = {{ supervisor_conf_d_dir }}/*.conf

  {% set _environment = fab_manager_env.keys() | zip(fab_manager_env.values() | map('regex_replace', '(^.*$)', '\"\\1\"') | map('regex_replace', '%', '%%')) | map('join', '=') | join(',') %}
  {# ' for vim syntax #}

  [program:app]
  user={{ fab_manager_user }}
  environment=PATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin",HOME={{ fab_manager_home }},{{ _environment }}
  directory={{ fab_manager_repo_dir }}
  command=bundle exec rails s puma -p {{ fab_manager_http_port }} -b {{ fab_manager_http_address }}
  stderr_logfile={{ supervisor_log_dir }}/app.err.log
  stdout_logfile={{ supervisor_log_dir }}/app.log

  [program:worker]
  user={{ fab_manager_user }}
  environment=PATH="/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin",HOME={{ fab_manager_home }},{{ _environment }}
  directory={{ fab_manager_repo_dir }}
  command=bundle exec sidekiq -C {{ fab_manager_repo_dir }}/config/sidekiq.yml
  stderr_logfile={{ supervisor_log_dir }}/worker.err.log
  stdout_logfile={{ supervisor_log_dir }}/worker.log

# ___________________________________haproxy
project_backend_port: 8000
os_haproxy_selinux_seport:
  FreeBSD: {}
  Debian: {}
  RedHat:
    ports:
      - 80
      - 8404
    proto: tcp
    setype: http_port_t
haproxy_selinux_seport: "{{ os_haproxy_selinux_seport[ansible_os_family] }}"

os_haproxy_flags:
  FreeBSD: |
    haproxy_config="{{ haproxy_conf_file }}"
    #haproxy_flags="-q -f ${haproxy_config} -p ${pidfile}"
  Debian: |
    #CONFIG="/etc/haproxy/haproxy.cfg"
    #EXTRAOPTS="-de -m 16"
  OpenBSD: ""
  RedHat: |
    OPTIONS=""
haproxy_flags: "{{ os_haproxy_flags[ansible_os_family] }}"

# ___________________________________nginx

project_nginx_root: "{{ fab_manager_repo_dir }}/public"
nginx_flags: ""
nginx_config: |
  worker_processes 1;
  error_log {{ nginx_error_log_file }};
  events {
    worker_connections 1024;
  }
  http {
    include {{ nginx_conf_dir }}/mime.types;
    access_log {{ nginx_access_log_file }};
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    server_tokens off;

    server {
      listen 127.0.0.1:8001;
      server_name {{ project_fab_manager_default_host.split(':')[0] }};
      {# ' for vim syntax #}
      root {{ project_nginx_root }};
      error_page 404 /404.html;
      error_page 500 502 503 504 /500.html;
      location = /500.html {
      }

      location /packs/static {
        expires 1y;
        add_header Cache-Control "public";
      }
    }

    server {
      listen 127.0.0.1:8002;
      root {{ project_maintenance_site_dir }};
      error_page 503 /index.html;
      location / {
        return 503;
      }
      location = /index.html {
        internal;
      }
    }
  }
nginx_config_fragments: []
nginx_htpasswd_users: []
